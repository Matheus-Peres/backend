access_log off;

limit_req_zone $http_cf_connecting_ip zone=apiip:20m rate=10r/s;
limit_req_zone $http_cf_connecting_ip zone=frontip:20m rate=5r/s;
limit_req_zone $http_cf_connecting_ip zone=proxyip:20m rate=20r/s;

upstream transformice {
	server www.transformice.com:80;
}

server {
	listen 80;

	include /etc/nginx/conf.d/cloudflare-allow.conf;
	deny all;

	# /api
	location /api {
		# API request
		limit_req zone=apiip burst=12 delay=6;

		set $service router;
		try_files /dev/null @forward;
	}

	location = /tfm {
		return 302 /tfm/;
	}
	location /tfm/ {
		# Serve transformice.com content in https
		limit_req zone=proxyip burst=12 delay=6;

		proxy_pass http://transformice/;
	}

	location / {
		# Assume it is frontend
		limit_req zone=frontip burst=5;

		set $service frontend;
		try_files /dev/null @forward;
	}

	location @forward {
		resolver 127.0.0.11 valid=10s; # Docker DNS resolver

		# Custom headers
		proxy_set_header X-Real-IP $http_cf_connecting_ip;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-Nginx-Proxy true;

		# Allow fast streaming HTTP/1.1 pipes (keep-alive, unbuffered)
		proxy_http_version 1.1;
		proxy_request_buffering off;
		proxy_buffering off;

		# Allow websockets
		proxy_set_header connection "upgrade";
		proxy_set_header upgrade $http_upgrade;

		# Forward to any upstream service
		proxy_pass http://$service:80;
	}
}